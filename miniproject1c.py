# -*- coding: utf-8 -*-
"""MiniProject1c

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/173TaxCobJm-x2uDtIEVf47YR1Vva9nnw

Download the Dataset
Download the dataset from the following link:
https://www.kaggle.com/uciml/breast-cancer-wisconsin-data/download
Download the dataset to your local computer in the project directory of your choice.

Reading the Dataset
Read the dataset into the Pandas DataFrame!
Does the dataset include any missing values? If so, delete the missing values entries!
Hint: Pandas can do that with one line of code!
"""

import numpy as np 
import pandas as pd 
import os

from google.colab import files
uploaded = files.upload()

breast_cancer = pd.read_csv('breast.csv')
breast_cancer

#Does the dataset include any missing values? If so, delete the missing values entries
breast_cancer.isnull().sum(axis = 0)

"""Dropping Unnecessary Columns
Choose the features you think are relevant to our analysis! There are a lot of features in this dataset but we have to make our model’s training time reasonable for you.
Hint: Notice the fact that some of the data in the Breast Cancer dataset is irrelevant to the research such as the id attribute.
"""

#Dropping Unnecessary Columns
breast_cancer.drop(['id'], axis = 1)

"""Preprocessing
Perform any needed pre-processing on the chosen features including:
Scaling;
Encoding;
Dealing with Nan values; and
Normalization.
Note:
You need to output the result of your pre-processing to an output CSV called “data_refined.csv”

Visualization
You need to deliver a number of visualizations for your dataset including:
Pair Plots for the features;
Correlation Matrix heat map; and
Box plots for the features.
Note:
Feel Free to add the visualizations that you like!
"""

#Visualization
import matplotlib.pyplot as plt

#Scatter Plot

# create a figure with its axis
figure, axis = plt.subplots()
# scatter the “sepal length” on the x-axis and the “sepal width” on the y-axis
axis.scatter(breast_cancer['radius_mean'], breast_cancer['diagnosis'])
# set a title and labels
axis.set_title('breast_cancer Dataset')
axis.set_xlabel('radius_mean')
axis.set_ylabel('diagnosis')

# create figure and axis
figure, axis = plt.subplots()
# plot histogram
axis.hist(breast_cancer['radius_mean'])
# set title and labels
axis.set_title('breast_cancer Dataset')
axis.set_xlabel('radius_mean')
axis.set_ylabel('Frequency')

import seaborn as sns

sns.boxplot('perimeter_mean', 'area_mean', data=breast_cancer)

sns.heatmap(breast_cancer.corr())

sns.pairplot(breast_cancer)

"""Challenge Yourself
Visualize your data in violin plots.
Describe what a violin plot is.
Determine whether or not some of the features have outliers based on your violin plots.
"""

sns.violinplot(x=breast_cancer["smoothness_mean"])

sns.violinplot(x="smoothness_mean", y="diagnosis", data=breast_cancer)